---
- name: install development libraries (Mac)
  homebrew:
    name: 
      - libevent
      - libmemcached
      - libxml2
      - libffi
      - gdal
      - gmp
    state: present
  when: ansible_os_family == 'Darwin'
  tags: dev

  #- name: unlink keg only
  #command: brew unlink {{ item}}
  #with_items:
  #  - libxml2
  #when: ansible_os_family == 'Darwin'

- name: install dev CLI tools
  homebrew:
    name:
      - heroku
      - rg
      - bat
      - z
      - fd
      - exa
      - shellcheck
    state: present
  when: ansible_os_family == 'Darwin'
  tags: dev

- name: install testing tools
  homebrew: 
    name:
      - chromedriver
    state: present
  when: ansible_os_family == 'Darwin'
  tags:
    - dev
    - testing

- name: install backing services (Mac)
  homebrew:
    name: 
      - redis
      - memcached
      - mysql
        #- elasticsearch
    state: present
  when: ansible_os_family == 'Darwin'
  tags: dev

- name: Add development desktop tools
  homebrew_cask:
    name:
      - pycharm
      - sequel-pro
      - postico
      - ngrok
      - aws-vault
    state: present
  when: ansible_os_family == 'Darwin'
  tags: dev

- name: Virtualization for dev
  homebrew_cask:
    name:
      - virtualbox
      - vagrant
      - docker
    state: present
  when: ansible_os_family == 'Darwin'
  tags: dev

- name: Add ideavimrc
  copy:
    src: ideavimrc
    dest: ~/.ideavimrc
  tags: dev

- name: Add DB restoration helper
  copy:
    src: create_db_restore.sh
    dest: ~/create_db_restore.sh
    mode: preserve
  tags: dev

# These are libraries that are installed but the Homebrew *module* fails on;
# not Homebrew by itself. At the end b/c they will fail but that's okay.
# They're here to track config until the problem can be identified and solved.
#- name: install problem libraries (Mac)
#  homebrew: name={{ item }} state=present
#  with_items:
#    - libgeoip
#  when: ansible_os_family == 'Darwin'
